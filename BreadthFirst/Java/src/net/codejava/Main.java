
package net.codejava;

public class Main {

    public static void main(String[] args)
    {
        //x and y seem to be in the wrong directions, opposite
//        char[][] matrix = {
//                {'0', '0', '0', '0'},
//                {'1', '1', '0', '0'},
//                {'0', '1', '1', '0'},
//                {'1', '0', '0', '0'},
//                {'1', '0', '1', '0'},
//                {'1', '0', '1', '0'},
//                {'1', '0', '0', '0'}
//        };

        char matrix[][] = {
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1'},
                {'1','0','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1','0','1'},
                {'1','0','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1','0','1'},
                {'1','0','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1','0','1'},
                {'1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1'},
                {'1','0','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1','0','1'},
                {'1','0','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1','0','1'},
                {'1','0','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1','0','1'},
                {'1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1'},
                {'1','0','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1','0','1'},
                {'1','0','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1','0','1'},
                {'1','0','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1','0','1'},
                {'1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
        };

        Pair startPos = new Pair(1,1);
        Pair endPos = new Pair(13,13);

        PathFinding p = new PathFinding();
        int path = p.pathExists(matrix, startPos, endPos);

        System.out.println("Number of steps taken: "+path);
    }
}
